Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /mnt/l/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_8d68d/fast && /usr/bin/make  -f CMakeFiles/cmTC_8d68d.dir/build.make CMakeFiles/cmTC_8d68d.dir/build
make[1]: Entering directory '/mnt/l/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o
/bin/clang   -v -MD -MT CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -c /mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/share/cmake-3.24/Modules/CMakeCCompilerABI.c
clang version 10.0.0-4ubuntu1 
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /bin
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Selected multilib: .;@m64
Found CUDA installation: /usr/lib/cuda, version 10.1
 (in-process)
 "/usr/lib/llvm-10/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model static -mthread-model posix -mframe-pointer=all -fmath-errno -fno-rounding-math -masm-verbose -mconstructor-aliases -munwind-tables -target-cpu x86-64 -dwarf-column-info -fno-split-dwarf-inlining -debugger-tuning=gdb -v -resource-dir /usr/lib/llvm-10/lib/clang/10.0.0 -dependency-file CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o.d -MT CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -sys-header-deps -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-10/lib/clang/10.0.0/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdebug-compilation-dir /mnt/l/hmz/build/CMakeFiles/CMakeTmp -ferror-limit 19 -fmessage-length 0 -fgnuc-version=4.2.1 -fobjc-runtime=gcc -fdiagnostics-show-option -faddrsig -o CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -x c /mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/share/cmake-3.24/Modules/CMakeCCompilerABI.c
clang -cc1 version 10.0.0 based upon LLVM 10.0.0 default target x86_64-pc-linux-gnu
ignoring nonexistent directory "/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/local/include
 /usr/lib/llvm-10/lib/clang/10.0.0/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
Linking C executable cmTC_8d68d
/mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8d68d.dir/link.txt --verbose=1
/bin/clang  -v -rdynamic CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -o cmTC_8d68d 
clang version 10.0.0-4ubuntu1 
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /bin
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Selected multilib: .;@m64
Found CUDA installation: /usr/lib/cuda, version 10.1
 "/bin/ld" -export-dynamic -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_8d68d /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crt1.o /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /bin/../lib/gcc/x86_64-linux-gnu/9/crtbegin.o -L/bin/../lib/gcc/x86_64-linux-gnu/9 -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/usr/lib/x86_64-linux-gnu/../../lib64 -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../.. -L/usr/lib/llvm-10/bin/../lib -L/lib -L/usr/lib CMakeFiles/cmTC_8d68d.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /bin/../lib/gcc/x86_64-linux-gnu/9/crtend.o /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
make[1]: Leaving directory '/mnt/l/hmz/build/CMakeFiles/CMakeTmp'


Cannot copy output executable
  '/mnt/l/hmz/build/CMakeFiles/CMakeTmp/cmTC_8d68d'
to destination specified by COPY_FILE:
  '/mnt/l/hmz/build/CMakeFiles/3.24.0-rc4/CMakeDetermineCompilerABI_C.bin'


Detecting CXX compiler ABI info failed to compile with the following output:
Change Dir: /mnt/l/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_7272e/fast && /usr/bin/make  -f CMakeFiles/cmTC_7272e.dir/build.make CMakeFiles/cmTC_7272e.dir/build
make[1]: Entering directory '/mnt/l/hmz/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o
/bin/clang++   -v -MD -MT CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -c /mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/share/cmake-3.24/Modules/CMakeCXXCompilerABI.cpp
clang version 10.0.0-4ubuntu1 
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /bin
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Selected multilib: .;@m64
Found CUDA installation: /usr/lib/cuda, version 10.1
 (in-process)
 "/usr/lib/llvm-10/bin/clang" -cc1 -triple x86_64-pc-linux-gnu -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model static -mthread-model posix -mframe-pointer=all -fmath-errno -fno-rounding-math -masm-verbose -mconstructor-aliases -munwind-tables -target-cpu x86-64 -dwarf-column-info -fno-split-dwarf-inlining -debugger-tuning=gdb -v -resource-dir /usr/lib/llvm-10/lib/clang/10.0.0 -dependency-file CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o.d -MT CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -internal-isystem /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9 -internal-isystem /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9 -internal-isystem /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9 -internal-isystem /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-10/lib/clang/10.0.0/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -fdebug-compilation-dir /mnt/l/hmz/build/CMakeFiles/CMakeTmp -ferror-limit 19 -fmessage-length 0 -fgnuc-version=4.2.1 -fobjc-runtime=gcc -fcxx-exceptions -fexceptions -fdiagnostics-show-option -faddrsig -o CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -x c++ /mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/share/cmake-3.24/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 10.0.0 based upon LLVM 10.0.0 default target x86_64-pc-linux-gnu
ignoring nonexistent directory "/include"
ignoring duplicate directory "/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9"
#include "..." search starts here:
#include <...> search starts here:
 /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9
 /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9
 /bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward
 /usr/local/include
 /usr/lib/llvm-10/lib/clang/10.0.0/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
Linking CXX executable cmTC_7272e
/mnt/c/Users/j_nh/Desktop/vim/cmake-3.24.0-rc4-linux-x86_64/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7272e.dir/link.txt --verbose=1
/bin/clang++  -v -rdynamic CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_7272e 
clang version 10.0.0-4ubuntu1 
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /bin
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /bin/../lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Selected multilib: .;@m64
Found CUDA installation: /usr/lib/cuda, version 10.1
 "/bin/ld" -export-dynamic -z relro --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTC_7272e /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crt1.o /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /bin/../lib/gcc/x86_64-linux-gnu/9/crtbegin.o -L/bin/../lib/gcc/x86_64-linux-gnu/9 -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/usr/lib/x86_64-linux-gnu/../../lib64 -L/bin/../lib/gcc/x86_64-linux-gnu/9/../../.. -L/usr/lib/llvm-10/bin/../lib -L/lib -L/usr/lib CMakeFiles/cmTC_7272e.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /bin/../lib/gcc/x86_64-linux-gnu/9/crtend.o /bin/../lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
make[1]: Leaving directory '/mnt/l/hmz/build/CMakeFiles/CMakeTmp'


Cannot copy output executable
  '/mnt/l/hmz/build/CMakeFiles/CMakeTmp/cmTC_7272e'
to destination specified by COPY_FILE:
  '/mnt/l/hmz/build/CMakeFiles/3.24.0-rc4/CMakeDetermineCompilerABI_CXX.bin'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:403:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:732:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:733:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:755:44: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:766:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:774:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:774:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:774:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:774:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:774:43: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                           ^
CMakeCCompilerId.c:778:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
cc1plus.exe: warning: command line option '-ftarget=arm-arm-none-eabi' is valid for Java but not for C++
CMakeCCompilerId.c:1:0: error: bad value (cortex-m3) for -mtune= switch
 #ifdef __cplusplus
 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:403:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:732:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:733:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:755:44: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:766:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:774:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:774:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:774:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:774:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:774:43: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                           ^
CMakeCCompilerId.c:778:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
cc1plus.exe: warning: command line option '-ftarget=arm-arm-none-eabi' is valid for Java but not for C++
CMakeCCompilerId.c:1:0: error: bad value (cortex-m3) for -mtune= switch
 #ifdef __cplusplus
 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:403:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:732:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:733:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:755:44: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:766:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:774:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:774:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:774:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:774:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:774:43: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                           ^
CMakeCCompilerId.c:778:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
cc1plus.exe: warning: command line option '-ftarget=arm-arm-none-eabi' is valid for Java but not for C++
CMakeCCompilerId.c:1:0: error: bad value (cortex-m3) for -mtune= switch
 #ifdef __cplusplus
 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_933cb/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_933cb.dir\build.make CMakeFiles/cmTC_933cb.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_933cb.dir/CMakeCCompilerABI.c.obj
C:\MinGW\bin\g++.exe    -o CMakeFiles\cmTC_933cb.dir\CMakeCCompilerABI.c.obj -c "C:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCCompilerABI.c"
C:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
 #  error "A C++ compiler has been selected for C."
    ^~~~~
CMakeFiles\cmTC_933cb.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_933cb.dir/CMakeCCompilerABI.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_933cb.dir/CMakeCCompilerABI.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_933cb/fast' failed
mingw32-make.exe: *** [cmTC_933cb/fast] Error 2




Determining if the C compiler works failed with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_7c0cb/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_7c0cb.dir\build.make CMakeFiles/cmTC_7c0cb.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7c0cb.dir/testCCompiler.c.obj
C:\MinGW\bin\g++.exe    -o CMakeFiles\cmTC_7c0cb.dir\testCCompiler.c.obj -c E:\hmz\build\CMakeFiles\CMakeTmp\testCCompiler.c
E:\hmz\build\CMakeFiles\CMakeTmp\testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
 # error "The CMAKE_C_COMPILER is set to a C++ compiler"
   ^~~~~
CMakeFiles\cmTC_7c0cb.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_7c0cb.dir/testCCompiler.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_7c0cb.dir/testCCompiler.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_7c0cb/fast' failed
mingw32-make.exe: *** [cmTC_7c0cb/fast] Error 2



Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:403:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:732:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:733:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:755:44: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:766:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:774:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:774:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:774:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:774:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:774:43: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                           ^
CMakeCCompilerId.c:778:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
cc1plus.exe: warning: command line option '-ftarget=arm-arm-none-eabi' is valid for Java but not for C++
CMakeCCompilerId.c:1:0: error: bad value (cortex-m3) for -mtune= switch
 #ifdef __cplusplus
 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:403:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:732:64: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:733:60: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:755:44: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:766:1: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:774:10: error: cannot declare '::main' to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:774:10: error: 'argc' was not declared in this scope
CMakeCCompilerId.c:774:16: error: 'argv' was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:774:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:774:43: error: storage size of 'argv' isn't known
 int main(argc, argv) int argc; char *argv[];
                                           ^
CMakeCCompilerId.c:778:1: error: expected unqualified-id before '{' token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++.exe: warning: '-mcpu=' is deprecated; use '-mtune=' or '-march=' instead
cc1plus.exe: warning: command line option '-ftarget=arm-arm-none-eabi' is valid for Java but not for C++
CMakeCCompilerId.c:1:0: error: bad value (cortex-m3) for -mtune= switch
 #ifdef __cplusplus
 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/MinGW/bin/g++.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++.exe: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_25cd3/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_25cd3.dir\build.make CMakeFiles/cmTC_25cd3.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_25cd3.dir/CMakeCCompilerABI.c.obj
C:\MinGW\bin\g++.exe    -o CMakeFiles\cmTC_25cd3.dir\CMakeCCompilerABI.c.obj -c "C:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCCompilerABI.c"
C:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
 #  error "A C++ compiler has been selected for C."
    ^~~~~
CMakeFiles\cmTC_25cd3.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_25cd3.dir/CMakeCCompilerABI.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_25cd3.dir/CMakeCCompilerABI.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_25cd3/fast' failed
mingw32-make.exe: *** [cmTC_25cd3/fast] Error 2




Determining if the C compiler works failed with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_27a68/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_27a68.dir\build.make CMakeFiles/cmTC_27a68.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_27a68.dir/testCCompiler.c.obj
C:\MinGW\bin\g++.exe    -o CMakeFiles\cmTC_27a68.dir\testCCompiler.c.obj -c E:\hmz\build\CMakeFiles\CMakeTmp\testCCompiler.c
E:\hmz\build\CMakeFiles\CMakeTmp\testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
 # error "The CMAKE_C_COMPILER is set to a C++ compiler"
   ^~~~~
CMakeFiles\cmTC_27a68.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_27a68.dir/testCCompiler.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_27a68.dir/testCCompiler.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_27a68/fast' failed
mingw32-make.exe: *** [cmTC_27a68/fast] Error 2



Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags:  

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
*Initialization*:1: missing token-sequence in `#assert'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags:  

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
*Initialization*:1: missing token-sequence in `#assert'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/2.6.2/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
gcc.exe: No input files
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
gcc.exe: No input files
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_e2f6d/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_e2f6d.dir\build.make CMakeFiles/cmTC_e2f6d.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e2f6d.dir/CMakeCCompilerABI.c.obj
C:\FPC\2.6.2\bin\i386-win32\gcc.exe    -o CMakeFiles\cmTC_e2f6d.dir\CMakeCCompilerABI.c.obj -c "C:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCCompilerABI.c"
Usage: cpp [switches] input output
Switches:
  -include <file>           Include the contents of <file> before other files
  -imacros <file>           Accept definition of marcos in <file>
  -iprefix <path>           Specify <path> as a prefix for next two options
  -iwithprefix <dir>        Add <dir> to the end of the system include paths
  -iwithprefixbefore <dir>  Add <dir> to the end of the main include paths
  -isystem <dir>            Add <dir> to the start of the system include paths
  -idirafter <dir>          Add <dir> to the end of the system include paths
  -I <dir>                  Add <dir> to the end of the main include paths
  -nostdinc                 Do not search the system include directories
  -nostdinc++               Do not search the system include directories for C++
  -o <file>                 Put output into <file>
  -pedantic                 Issue all warnings demanded by strict ANSI C
  -traditional              Follow K&R pre-processor behaviour
  -trigraphs                Support ANSI C trigraphs
  -lang-c                   Assume that the input sources are in C
  -lang-c89                 Assume that the input is C89; depricated
  -lang-c++                 Assume that the input sources are in C++
  -lang-objc                Assume that the input sources are in ObjectiveC
  -lang-objc++              Assume that the input sources are in ObjectiveC++
  -lang-asm                 Assume that the input sources are in assembler
  -lang-chill               Assume that the input sources are in Chill
  -std=<std name>           Specify the conformance standard; one of:
                            gnu89, gnu9x, c89, c9x, iso9899:1990,
                            iso9899:199409, iso9899:199x
  -+                        Allow parsing of C++ style features
  -w                        Inhibit warning messages
  -Wtrigraphs               Warn if trigraphs are encountered
  -Wno-trigraphs            Do not warn about trigraphs
  -Wcomment{s}              Warn if one comment starts inside another
  -Wno-comment{s}           Do not warn about comments
  -Wtraditional             Warn if a macro argument is/would be turned into
                             a string if -traditional is specified
  -Wno-traditional          Do not warn about stringification
  -Wundef                   Warn if an undefined macro is used by #if
  -Wno-undef                Do not warn about testing undefined macros
  -Wimport                  Warn about the use of the #import directive
  -Wno-import               Do not warn about the use of #import
  -Werror                   Treat all warnings as errors
  -Wno-error                Do not treat warnings as errors
  -Wall                     Enable all preprocessor warnings
  -M                        Generate make dependencies
  -MM                       As -M, but ignore system header files
  -MD                       As -M, but put output in a .d file
  -MMD                      As -MD, but ignore system header files
  -MG                       Treat missing header file as generated files
  -g                        Include #define and #undef directives in the output
  -D<macro>                 Define a <macro> with string '1' as its value
  -D<macro>=<val>           Define a <macro> with <val> as its value
  -A<question> (<answer>)   Assert the <answer> to <question>
  -U<macro>                 Undefine <macro> 
  -u or -undef              Do not predefine any macros
  -v                        Display the version number
  -H                        Print the name of header files as they are used
  -C                        Do not discard comments
  -dM                       Display a list of macro definitions active at end
  -dD                       Preserve macro definitions in output
  -dN                       As -dD except that only the names are preserved
  -dI                       Include #include directives in the output
  -ifoutput                 Describe skipped code blocks in output 
  -P                        Do not generate #line directives
  -$                        Do not include '$' in identifiers
  -remap                    Remap file names when including files.
  -h or --help              Display this information
cpp: Too many arguments
CMakeFiles\cmTC_e2f6d.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_e2f6d.dir/CMakeCCompilerABI.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_e2f6d.dir/CMakeCCompilerABI.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_e2f6d/fast' failed
mingw32-make.exe: *** [cmTC_e2f6d/fast] Error 2




Determining if the C compiler works failed with the following output:
Change Dir: E:/hmz/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/MinGW/bin/mingw32-make.exe -f Makefile cmTC_921d4/fast && C:/MinGW/bin/mingw32-make.exe  -f CMakeFiles\cmTC_921d4.dir\build.make CMakeFiles/cmTC_921d4.dir/build
mingw32-make.exe[1]: Entering directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_921d4.dir/testCCompiler.c.obj
C:\FPC\2.6.2\bin\i386-win32\gcc.exe    -o CMakeFiles\cmTC_921d4.dir\testCCompiler.c.obj -c E:\hmz\build\CMakeFiles\CMakeTmp\testCCompiler.c
gcc.exe: installation problem, cannot exec `cc1': No such file or directory
CMakeFiles\cmTC_921d4.dir\build.make:76: recipe for target 'CMakeFiles/cmTC_921d4.dir/testCCompiler.c.obj' failed
mingw32-make.exe[1]: *** [CMakeFiles/cmTC_921d4.dir/testCCompiler.c.obj] Error 1
mingw32-make.exe[1]: Leaving directory 'E:/hmz/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_921d4/fast' failed
mingw32-make.exe: *** [cmTC_921d4/fast] Error 2



